/* 
 * Sample Post Office API
 *
 * This is a sample post office API
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing TransfersApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class TransfersApiTests
    {
        private TransfersApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new TransfersApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of TransfersApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' TransfersApi
            //Assert.IsInstanceOfType(typeof(TransfersApi), instance, "instance is a TransfersApi");
        }

        /// <summary>
        /// Test SourcesGet
        /// </summary>
        [Test]
        public void SourcesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.SourcesGet();
            
        }
        /// <summary>
        /// Test SourcesIdDestinationsGet
        /// </summary>
        [Test]
        public void SourcesIdDestinationsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.SourcesIdDestinationsGet(id);
            
        }
        /// <summary>
        /// Test TransfersGet
        /// </summary>
        [Test]
        public void TransfersGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.TransfersGet();
            //Assert.IsInstanceOf<TransferList> (response, "response is TransferList");
        }
        /// <summary>
        /// Test TransfersIdDelete
        /// </summary>
        [Test]
        public void TransfersIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.TransfersIdDelete(id);
            
        }
        /// <summary>
        /// Test TransfersIdGet
        /// </summary>
        [Test]
        public void TransfersIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.TransfersIdGet(id);
            
        }
        /// <summary>
        /// Test TransfersPost
        /// </summary>
        [Test]
        public void TransfersPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TransferRequest body = null;
            //var response = instance.TransfersPost(body);
            //Assert.IsInstanceOf<TransferResponse> (response, "response is TransferResponse");
        }
    }

}
